plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}


def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}


android {

    


    namespace = "com.example.education_app"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.education_app"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

signingConfigs {
        release {
            keyAlias = keystoreProperties['keyAlias']
            keyPassword = keystoreProperties['keyPassword']
            storeFile = keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword = keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now,
            // so `flutter run --release` works.
            signingConfig = signingConfigs.debug
            signingConfig = signingConfigs.release
        }
    }


     // Add this if not present
    // packagingOptions {
    //     exclude 'META-INF/DEPENDENCIES'
    //     exclude 'META-INF/LICENSE'
    //     exclude 'META-INF/LICENSE.txt'
    //     exclude 'META-INF/license.txt'
    //     exclude 'META-INF/NOTICE'
    //     exclude 'META-INF/NOTICE.txt'
    //     exclude 'META-INF/notice.txt'
    //     exclude 'META-INF/ASL2.0'
    //     exclude '**/libtensorflowlite_jni.so'  // Add this line
    // }
}

flutter {
    source = "../.."
}

// dependencies {
//     // ... other dependencies ...
//     implementation 'org.tensorflow:tensorflow-lite:2.5.0'
//     implementation 'org.tensorflow:tensorflow-lite-support:0.3.0'
// }
